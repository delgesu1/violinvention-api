components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        role:
          type: string
      example:
        name: fake name
        role: Admin


    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 200
            message: Success
    DuplicateEmployeeId:
      description: Employee id already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Employee id already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    PermissionDenied:
      description: No permission
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Permission denied
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    Deleted:
      description: Deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 200
            message: Deleted Successfully!

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
